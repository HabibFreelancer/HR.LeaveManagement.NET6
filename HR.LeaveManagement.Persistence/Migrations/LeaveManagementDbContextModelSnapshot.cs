// <auto-generated />
using System;
using HR.LeaveManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.LeaveManagement.Persistence.Migrations
{
    [DbContext(typeof(LeaveManagementDbContext))]
    partial class LeaveManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HR.LeaveManagement.Domain.LeaveAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveAllocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1315),
                            EmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1321),
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            Period = 2025
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1324),
                            EmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1325),
                            LeaveTypeId = 2,
                            NumberOfDays = 10,
                            Period = 2025
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1326),
                            EmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1327),
                            LeaveTypeId = 1,
                            NumberOfDays = 20,
                            Period = 2025
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1328),
                            EmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1328),
                            LeaveTypeId = 2,
                            NumberOfDays = 10,
                            Period = 2025
                        });
                });

            modelBuilder.Entity("HR.LeaveManagement.Domain.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateActioned")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveTypeId")
                        .HasColumnType("int");

                    b.Property<string>("RequestComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestingEmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LeaveTypeId");

                    b.ToTable("LeaveRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            Cancelled = false,
                            CreatedBy = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1526),
                            DateRequested = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1525),
                            EndDate = new DateTime(2025, 4, 6, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1523),
                            LastModifiedBy = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1527),
                            LeaveTypeId = 1,
                            RequestComments = "Family vacation",
                            RequestingEmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            StartDate = new DateTime(2025, 4, 1, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1518)
                        },
                        new
                        {
                            Id = 2,
                            Approved = false,
                            Cancelled = false,
                            CreatedBy = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1531),
                            DateRequested = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1529),
                            EndDate = new DateTime(2025, 3, 28, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1528),
                            LastModifiedBy = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1532),
                            LeaveTypeId = 2,
                            RequestComments = "Feeling unwell",
                            RequestingEmployeeId = "9e224968-33e4-4652-b7b7-8574d048cdb9",
                            StartDate = new DateTime(2025, 3, 27, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1528)
                        });
                });

            modelBuilder.Entity("HR.LeaveManagement.Domain.LeaveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultDays")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaveTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1632),
                            DefaultDays = 20,
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1634),
                            Name = "Annual Leave"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            DateCreated = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1635),
                            DefaultDays = 10,
                            LastModifiedBy = "8e445865-a24d-4543-a6c6-9443d048cdb9",
                            LastModifiedDate = new DateTime(2025, 3, 22, 5, 48, 2, 176, DateTimeKind.Utc).AddTicks(1636),
                            Name = "Sick Leave"
                        });
                });

            modelBuilder.Entity("HR.LeaveManagement.Domain.LeaveAllocation", b =>
                {
                    b.HasOne("HR.LeaveManagement.Domain.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });

            modelBuilder.Entity("HR.LeaveManagement.Domain.LeaveRequest", b =>
                {
                    b.HasOne("HR.LeaveManagement.Domain.LeaveType", "LeaveType")
                        .WithMany()
                        .HasForeignKey("LeaveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaveType");
                });
#pragma warning restore 612, 618
        }
    }
}
